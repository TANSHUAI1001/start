<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tan.start.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.tan.start.entity.Employee">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    <id column="eNo" jdbcType="INTEGER" property="eno" />
    <result column="eName" jdbcType="VARCHAR" property="ename" />
    <result column="mNo" jdbcType="INTEGER" property="mno" />
    <result column="dept" jdbcType="INTEGER" property="dept" />
    <result column="sal" jdbcType="DOUBLE" property="sal" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    eNo, eName, mNo, dept, sal
  </sql>
  <select id="selectByExample" parameterType="com.tan.start.entity.EmployeeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from employee
    where eNo = #{eno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    delete from employee
    where eNo = #{eno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tan.start.entity.EmployeeExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tan.start.entity.Employee">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    insert into employee (eNo, eName, mNo, 
      dept, sal)
    values (#{eno,jdbcType=INTEGER}, #{ename,jdbcType=VARCHAR}, #{mno,jdbcType=INTEGER}, 
      #{dept,jdbcType=INTEGER}, #{sal,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.tan.start.entity.Employee">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eno != null">
        eNo,
      </if>
      <if test="ename != null">
        eName,
      </if>
      <if test="mno != null">
        mNo,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="sal != null">
        sal,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eno != null">
        #{eno,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="mno != null">
        #{mno,jdbcType=INTEGER},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=INTEGER},
      </if>
      <if test="sal != null">
        #{sal,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tan.start.entity.EmployeeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    update employee
    <set>
      <if test="record.eno != null">
        eNo = #{record.eno,jdbcType=INTEGER},
      </if>
      <if test="record.ename != null">
        eName = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.mno != null">
        mNo = #{record.mno,jdbcType=INTEGER},
      </if>
      <if test="record.dept != null">
        dept = #{record.dept,jdbcType=INTEGER},
      </if>
      <if test="record.sal != null">
        sal = #{record.sal,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    update employee
    set eNo = #{record.eno,jdbcType=INTEGER},
      eName = #{record.ename,jdbcType=VARCHAR},
      mNo = #{record.mno,jdbcType=INTEGER},
      dept = #{record.dept,jdbcType=INTEGER},
      sal = #{record.sal,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tan.start.entity.Employee">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    update employee
    <set>
      <if test="ename != null">
        eName = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="mno != null">
        mNo = #{mno,jdbcType=INTEGER},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=INTEGER},
      </if>
      <if test="sal != null">
        sal = #{sal,jdbcType=DOUBLE},
      </if>
    </set>
    where eNo = #{eno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tan.start.entity.Employee">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 09 12:53:00 CST 2019.
    -->
    update employee
    set eName = #{ename,jdbcType=VARCHAR},
      mNo = #{mno,jdbcType=INTEGER},
      dept = #{dept,jdbcType=INTEGER},
      sal = #{sal,jdbcType=DOUBLE}
    where eNo = #{eno,jdbcType=INTEGER}
  </update>
</mapper>